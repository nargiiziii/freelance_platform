// backend/src/middleware/jwtMiddleware.js
import jwt from "jsonwebtoken";

// üõ° Middleware: –ø—Ä–æ–≤–µ—Ä–∫–∞ access —Ç–æ–∫–µ–Ω–∞ –∏–∑ cookie
export const verifyToken = async (req, res, next) => {
  const token = req.cookies.accessToken;
  console.log("–ü–æ–ª—É—á–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω –∏–∑ cookie:", token);

  if (!token) return res.status(401).json({ message: "–ù–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏" });

  try {
    const decoded = jwt.verify(token, process.env.JWT_SECRET);
    // console.log("–î–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω:", decoded);

    req.user = { id: decoded.id }; // ‚úÖ –¥–æ—Å—Ç—É–ø–Ω–æ –∫–∞–∫ req.user.id
    next();
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–æ–∫–µ–Ω–∞:", error.message);

    if (error.name === "TokenExpiredError") {
      return res.status(401).json({ message: "–¢–æ–∫–µ–Ω –∏—Å—Ç–µ–∫, –æ–±–Ω–æ–≤–∏—Ç–µ access token" });
    }

    return res.status(401).json({ message: "–¢–æ–∫–µ–Ω –Ω–µ –≤–∞–ª–∏–¥–µ–Ω" });
  }
};

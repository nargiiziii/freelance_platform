// üîß –ù–æ–≤—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç: ProjectListForFreelancer.jsx
// –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ —Å –∫–Ω–æ–ø–∫–æ–π "–û—Ç–∫–ª–∏–∫–Ω—É—Ç—å—Å—è"

import React, { useEffect, useState } from "react";
import { useDispatch, useSelector } from "react-redux";
import { getOpenProjects } from "../../redux/features/projectSlice";
import { createProposal } from "../../redux/features/proposalSlice";
import { Link } from "react-router-dom";

function ProjectListForFreelancer() {
  const dispatch = useDispatch();
  const { openProjects: projects, status } = useSelector(
    (state) => state.projects
  );
  const [coverLetter, setCoverLetter] = useState("");
  const [price, setPrice] = useState("");
  const [activeProject, setActiveProject] = useState(null);

  useEffect(() => {
    dispatch(getOpenProjects());
  }, [dispatch]);

  const handleSubmit = (e) => {
    e.preventDefault();
    if (!activeProject) return;
    dispatch(
      createProposal({
        projectId: activeProject._id,
        coverLetter,
        price: Number(price),
      })
    );
    setActiveProject(null);
    setCoverLetter("");
    setPrice("");
  };

  if (status === "loading") return <p>–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤...</p>;

  return (
    <section>
      <h3>–û—Ç–∫—Ä—ã—Ç—ã–µ –ø—Ä–æ–µ–∫—Ç—ã</h3>
      <ul>
        {projects
          .filter((project) => project.status === "open") // üëà —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è
          .map((project) => (
            <li key={project._id} style={{ marginBottom: "1rem" }}>
              <h4>{project.title}</h4>
              <p>{project.description}</p>
              <p>
                <strong>–ë—é–¥–∂–µ—Ç:</strong> {project.budget}‚ÇΩ
              </p>
              {/* üí¨ –ö–Ω–æ–ø–∫–∞: –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞–Ω–∏–º–∞—Ç–µ–ª—é */}
              {project.employer && (
                <p>
                  <strong>–ù–∞–Ω–∏–º–∞—Ç–µ–ª—å:</strong> {project.employer.name}
                  <Link to={`/chatRoom/${project.employer._id}`}>
                    <button>–ù–∞–ø–∏—Å–∞—Ç—å –Ω–∞–Ω–∏–º–∞—Ç–µ–ª—é</button>
                  </Link>
                </p>
              )}

              <button onClick={() => setActiveProject(project)}>
                –û—Ç–∫–ª–∏–∫–Ω—É—Ç—å—Å—è
              </button>
            </li>
          ))}
      </ul>

      {activeProject && (
        <form onSubmit={handleSubmit}>
          <h4>–û—Ç–∫–ª–∏–∫ –Ω–∞: {activeProject.title}</h4>
          <textarea
            required
            value={coverLetter}
            onChange={(e) => setCoverLetter(e.target.value)}
            placeholder="–°–æ–ø—Ä–æ–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ–µ –ø–∏—Å—å–º–æ"
          ></textarea>
          <input
            type="number"
            required
            value={price}
            onChange={(e) => setPrice(e.target.value)}
            placeholder="–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–∞—è —Ü–µ–Ω–∞"
          />
          <button type="submit">–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–∫–ª–∏–∫</button>
        </form>
      )}
    </section>
  );
}

export default ProjectListForFreelancer;

// ‚úÖ –û–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π ProposalList (–∞–∫–∫—É—Ä–∞—Ç–Ω—ã–π —Å—Ç–∏–ª—å)
import React, { useState, useEffect } from "react";
import { useDispatch } from "react-redux";
import {
  acceptProposal,
  rejectProposal,
} from "../../redux/features/proposalSlice";
import { getEmployerProjects } from "../../redux/features/projectSlice";
import style from "./ProposalList.module.scss";

const ProposalList = ({ proposals = [] }) => {
  const dispatch = useDispatch();
  const [localProposals, setLocalProposals] = useState(proposals);

  useEffect(() => {
    setLocalProposals(proposals);
  }, [proposals]);

  const handleAccept = (proposalId) => {
    dispatch(acceptProposal({ proposalId }))
      .unwrap()
      .then(({ proposal: updated }) => {
        const updatedList = localProposals.map((p) =>
          p._id === updated._id ? { ...updated } : { ...p, status: "rejected" }
        );
        setLocalProposals(updatedList);
        dispatch(getEmployerProjects());
      })
      .catch((err) => {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–Ω—è—Ç–∏–∏ –æ—Ç–∫–ª–∏–∫–∞:", err);
        alert("–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–Ω—è—Ç—å –æ—Ç–∫–ª–∏–∫");
      });
  };

  return (
    <div className={style.proposalList}>
      {localProposals.length > 0 && <h4 className={style.heading}>–û—Ç–∫–ª–∏–∫–∏</h4>}
      {localProposals.length === 0 ? (
        <p className={style.noProposals}>–û—Ç–∫–ª–∏–∫–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç</p>
      ) : (
        localProposals.map((proposal) => (
          <div key={proposal._id} className={style.proposalCard}>
            <div className={style.infoBlock}>
              <p>
                <strong>–§—Ä–∏–ª–∞–Ω—Å–µ—Ä:</strong>{" "}
                {proposal.freelancer?.name || "–ë–µ–∑ –∏–º–µ–Ω–∏"}
              </p>
              <p>
                <strong>–ü–∏—Å—å–º–æ:</strong> {proposal.coverLetter}
              </p>
              <p>
                <strong>–¶–µ–Ω–∞:</strong> {proposal.price}‚ÇΩ
              </p>
              <p>
                <strong>–°—Ç–∞—Ç—É—Å:</strong> {proposal.status}
              </p>
            </div>

            {proposal.status === "pending" && (
              <div className={style.buttons}>
                <button
                  className={style.acceptButton}
                  onClick={() => handleAccept(proposal._id)}
                >
                  ‚úÖ –ü—Ä–∏–Ω—è—Ç—å
                </button>
                <button
                  className={style.rejectButton}
                  onClick={() =>
                    dispatch(rejectProposal({ proposalId: proposal._id }))
                  }
                >
                  ‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å
                </button>
              </div>
            )}

            {proposal.status === "submitted" && proposal.workFile && (
              <div>
                <strong>–§—Ä–∏–ª–∞–Ω—Å–µ—Ä —Å–¥–∞–ª —Ä–∞–±–æ—Ç—É:</strong>
                <br />
                <a
                  href={`http://localhost:3000/api/proposals/download/${proposal.workFile}`}
                >
                  üì• –°–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª
                </a>
              </div>
            )}
          </div>
        ))
      )}
    </div>
  );
};

export default ProposalList;
